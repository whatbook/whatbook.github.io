{"version":3,"sources":["app/images/WechatIMG303.png","app/pages/collections/styled.tsx","app/components/Card.tsx","app/pages/collections/Collections.tsx","app/components/NavButton.tsx","app/components/AppBar.tsx","app/components/MainView.tsx","app/pages/WorkingSchedule/WorkingSchedule.tsx","App.tsx","serviceWorker.ts","app/utils/bootstrap.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","CollectionsWrap","styled","div","withConfig","displayName","componentId","CollectionCard","classes","this","props","react_default","a","createElement","core_index_es","className","card","CardActionArea_default","CardMedia_default","media","image","title","CardContent_default","Typography_default","gutterBottom","variant","component","CardActions_default","Button_default","size","color","Component","withStyles","maxWidth","height","Collections","map","Card","withTheme","label","to","activeOnlyWhenExact","theme","StyledButton","Button","palette","primary","main","Route","path","exact","children","_ref","match","history","onClick","push","createMuiTheme","typography","useNextVariants","styles","makeStyles","console","log","root","flexGrow","grow","menuButton","marginLeft","marginRight","uppercase","textTransform","spaceBetween","justifyContent","activeBtn","fontSize","ButtonAppBar","NoSsr_default","styled_components_browser_esm","AppBar_default","position","Toolbar_default","components_NavButton","MainView","components_AppBar","moment","locale","DavidArr","HongArr","getListData","value","DavidDays","diff","format","HongDays","listData","DavidIndex","Math","abs","type","content","HongIndex","dateCellRender","item","key","badge","status","text","monthCellRender","num","month","getMonthData","CalendarStyled","Calendar","workingSchedule","state","selectedValue","onSelect","_this","setState","onPanelChange","_this$state","style","marginTop","es_alert","message","concat","David","Hong","obj","find","App","BrowserRouter","Switch","WorkingSchedule","Boolean","window","location","hostname","install","process","secondary","ReactDOM","render","index_es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8RCE3BC,EAAkBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,sLCmBtBK,mLACK,IACCC,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAWP,EAAQQ,MACvBL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEG,UAAWP,EAAQW,MACnBC,MAAOA,IACPC,MAAM,0BAERV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,UAGAf,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYc,UAAU,KAAtB,mIAMJf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,KACED,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQiB,KAAK,QAAQC,MAAM,WAA3B,SAGAnB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAQiB,KAAK,QAAQC,MAAM,WAA3B,uBA1BmBC,aAmCdC,uBA9CA,CACbhB,KAAM,CACJiB,SAAU,KAEZd,MAAO,CACLe,OAAQ,MAyCGF,CAAmBzB,GCpDb4B,mLAEjB,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACZ,EAAD,KACG,CAAC,EAAG,EAAG,GAAGmC,IAAI,WACb,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,iBANsBN,+CCgC1BO,gBA9BG,SAAC5B,GAKb,IACI6B,EAA0C7B,EAA1C6B,MAAOC,EAAmC9B,EAAnC8B,GAAIC,EAA+B/B,EAA/B+B,oBAAqBC,EAAUhC,EAAVgC,MAClCC,EAAezC,YAAO0C,KAAVxC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,yDACP,kBAAMwC,EAAMG,QAAQC,QAAQC,OAMvC,OACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,KAAMT,EACNU,MAAOT,EACPU,SAAU,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,QAClB,OACE3C,EAAAC,EAAAC,cAAC8B,EAAD,CAAcY,QAAS,kBAAMD,EAAQE,KAAKhB,IAAKzB,UAAWsC,EAAQ,SAAW,IAE1Ed,yBCjBPG,EAAQe,yBAAe,CAC3BC,WAAY,CACVC,iBAAiB,KAIfC,EAASC,YAAW,SAACnB,GAEzB,OADAoB,QAAQC,IAAIrB,GACJ,CACNsB,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfC,UAAW,CACTC,cAAe,aAEjBC,aAAc,CACZC,eAAgB,iBAElBC,UAAW,CACTC,SAAU,WAgCDC,MA3Bf,WACE,IAAMpE,EAAUoD,IAChB,OACEjD,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,KACED,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAepC,MAAOA,GACpB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQwD,MACtBrD,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAQkB,MAAM,UAAUkD,SAAS,UAC/BrE,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAASG,UAAWP,EAAQgE,cAI1B7D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYa,QAAQ,KAAKK,MAAM,UAAUf,UAAWP,EAAQ8D,WAA5D,YAGA3D,EAAAC,EAAAC,cAACqE,EAAD,CAAWzC,qBAAqB,EAAMD,GAAG,eAAeD,MAAM,iBAC9D5B,EAAAC,EAAAC,cAACqE,EAAD,CAAW1C,GAAG,aAAaD,MAAM,iBACjC5B,EAAAC,EAAAC,cAACqE,EAAD,CAAW1C,GAAG,oBAAoBD,MAAM,uBAExC5B,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,EAAQ0D,aC5CvBiB,mLATX,OACExE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,KAAK,eAAevB,UAAWS,YALvBJ,4FCGvBsD,KAAOC,OAAO,SAEd,IAAMC,GAAW,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBACtDC,GAAU,CAAC,eAAM,gBAEvB,SAASC,GAAYC,GACnB,IAAMC,EAAYN,KAAO,YAAYO,KAAKF,EAAMG,OAAO,cAAe,QAChEC,EAAWT,KAAO,YAAYO,KAAKF,EAAMG,OAAO,cAAe,QACjEE,EAA2E,GAE/E,GAAIJ,GAAa,EAAG,CAClB,IAAMK,EAAaC,KAAKC,IAAIP,GAAa,EACzCI,EAASvC,KAAK,CACZ2C,KAAM,UACNC,QAAS,WAAQb,GAASS,KAI9B,GAAIF,GAAY,EAAG,CACjB,IAAMO,EAAYJ,KAAKC,IAAIJ,GAAY,EACvCC,EAASvC,KAAK,CACZ2C,KAAM,UACNC,QAAS,WAAQZ,GAAQa,KAG7B,OAAON,GAAY,GAGrB,SAASO,GAAeZ,GACtB,IAAMK,EAAWN,GAAYC,GAC7B,OACE/E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,UAEVgF,EAAS3D,IAAI,SAAAmE,GAAI,OACf5F,EAAAC,EAAAC,cAAA,MAAI2F,IAAKD,EAAKH,SACZzF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,OAAQH,EAAKJ,KAAMQ,KAAMJ,EAAKH,cAcjD,SAASQ,GAAgBlB,GACvB,IAAMmB,EAPR,SAAsBnB,GACpB,GAAsB,IAAlBA,EAAMoB,QACR,OAAO,KAKGC,CAAarB,GACzB,OAAOmB,EACLlG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,eAAUgG,GACVlG,EAAAC,EAAAC,cAAA,+BAEA,KAGN,IAAMmG,GAAiB9G,YAAO+G,KAAV7G,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,qPA0ELgH,8MAnDbC,MAAQ,CACNzB,MAAOL,OACP+B,cAAe/B,UAGjBgC,SAAW,SAAC3B,GACV4B,EAAKC,SAAS,CACZ7B,QACA0B,cAAe1B,OAInB8B,cAAgB,SAAC9B,GACf4B,EAAKC,SAAS,CAAE7B,mFAeT,IAAA+B,EAC0BhH,KAAK0G,MAA9BzB,EADD+B,EACC/B,MAAO0B,EADRK,EACQL,cAEf,OACEzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,MAAI6G,MAAO,CAAEC,UAAW,SAAWP,GAAiBA,EAAcvB,OAAO,eACzElF,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOzB,KAAK,UAAU0B,QAAO,GAAAC,OAAKrH,KAAKsH,SACvCpH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOzB,KAAK,UAAU0B,QAAO,GAAAC,OAAKrH,KAAKuH,QAEvCrH,EAAAC,EAAAC,cAACmG,GAAD,CACEtB,MAAOA,EACP2B,SAAU5G,KAAK4G,SACfG,cAAe/G,KAAK+G,cACpBlC,OAAQA,IACRgB,eAAgBA,GAChBM,gBAAiBA,oCA3Bb,IACFQ,EAAkB3G,KAAK0G,MAAvBC,cACFa,EAAMb,GAAiB3B,GAAY2B,GAAec,KAAK,SAAA3B,GAAI,MAAkB,YAAdA,EAAKJ,OAC1E,OAAO8B,GAAOA,EAAI7B,qCAGT,IACDgB,EAAkB3G,KAAK0G,MAAvBC,cACFa,EAAMb,GAAiB3B,GAAY2B,GAAec,KAAK,SAAA3B,GAAI,MAAkB,YAAdA,EAAKJ,OAC1E,OAAO8B,GAAOA,EAAI7B,eA1BQrE,aCnFToG,oLAEjB,OACExH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAEAH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACE1H,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,oBAAoBvB,UAAW4G,KACjD3H,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,KAAK,IAAIvB,UAAWyD,cATNpD,aCMbwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrF,MACvB,2DChBNsF,cCQA7E,QAAQC,IAAI,eAAM6E,gDAClB,IAAMlG,GAAQe,yBAAe,CAC3BZ,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjB8F,UAAW,CAAE9F,KAAM,YAErBW,WAAY,CAAEC,iBAAiB,KAEjCG,QAAQC,IAAIrB,IACZoG,IAASC,OACPpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAetG,MAAOA,IACpB/B,EAAAC,EAAAC,cAACoI,GAAD,OACgBC,SAASC,eAAe,SFmHtC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7aab9859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WechatIMG303.87e4123a.png\";","import styled from \"styled-components\";\n\nexport const CollectionsWrap = styled.div`\n  width: 1080px;\n  padding: 100px 0;\n  display: flex;\n  margin: 0 auto;\n`\n\n","import React, { Component } from 'react';\nimport { Card } from '@material-ui/core'\nimport { withStyles, WithStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport image from '../images/WechatIMG303.png'\nconst styles = {\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n};\n\nexport interface Props extends WithStyles<typeof styles> { }\n\nclass CollectionCard extends Component<Props> {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={image}\n            title='Contemplative Reptile'\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5' component='h2'>\n              Lizard\n          </Typography>\n            <Typography component='p'>\n              Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n              across all continents except Antarctica\n          </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size='small' color='primary'>\n            Share\n        </Button>\n          <Button size='small' color='primary'>\n            Learn More\n        </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(CollectionCard)\n","import React, { Component } from 'react'\nimport { CollectionsWrap } from './styled';\nimport CollectionCard from '../../components/Card';\n\nexport default class Collections extends Component {\n  render() {\n    return (\n      <div>\n        <CollectionsWrap>\n          {[1, 2, 3].map(() => {\n            return <CollectionCard />\n          })}\n        </CollectionsWrap>\n\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Link, Route } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { withTheme } from '@material-ui/styles';\n\nconst NavButton = (props: {\n  label: string,\n  to: string,\n  activeOnlyWhenExact?: boolean,\n  theme: any\n}) => {\n  const { label, to, activeOnlyWhenExact, theme } = props\n  const StyledButton = styled(Button)`\n    color: ${() => theme.palette.primary.main};\n    &&.active {\n      font-size: 18px;\n      font-weight: 600;\n    }\n  `\n  return (\n    <Route\n      path={to}\n      exact={activeOnlyWhenExact}\n      children={({ match, history }) => {\n        return (\n          <StyledButton onClick={() => history.push(to)} className={match ? \"active\" : \"\"}>\n            {/* <Link to={to}>{label}</Link> */}\n            {label}\n          </StyledButton>\n        )\n      }}\n    />\n  )\n}\n\nexport default withTheme()(NavButton)","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport NavButton from './NavButton';\nimport { makeStyles } from '@material-ui/styles';\nimport { ThemeProvider } from 'styled-components';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { createMuiTheme } from '@material-ui/core'\n// import { unstable_Box as Box } from '@material-ui/core/Box';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst styles = makeStyles((theme) => {\n  console.log(theme);\n  return ({\n    root: {\n      flexGrow: 1,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n    },\n    uppercase: {\n      textTransform: 'uppercase'\n    },\n    spaceBetween: {\n      justifyContent: 'space-between'\n    },\n    activeBtn: {\n      fontSize: '16px'\n    }\n  })\n})\n\nfunction ButtonAppBar () {\n  const classes = styles()\n  return (\n    <NoSsr>\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar color='default' position=\"static\">\n            <Toolbar className={classes.spaceBetween}>\n              {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton> */}\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.uppercase}>\n                Whatbook\n          </Typography>\n              <NavButton activeOnlyWhenExact={true} to='/collections' label='藏品' />\n              <NavButton to='/economics' label='经济' />\n              <NavButton to='/working-schedule' label='排班表' />\n\n              <div className={classes.grow}></div>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </ThemeProvider>\n    </NoSsr >\n  )\n}\n\nexport default ButtonAppBar\n","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport Collections from '../pages/collections/Collections';\nimport AppBar from './AppBar';\n\nclass MainView extends Component {\n  render() {\n    return (\n      <div>\n        <AppBar />\n        <Route path=\"/collections\" component={Collections} />\n      </div>\n    )\n  }\n}\n\nexport default MainView","import { Alert, Badge, Calendar } from 'antd';\nimport 'antd/dist/antd.css';\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nmoment.locale('zh-cn')\n\nconst DavidArr = ['休息', '休息', '夜班', '夜班', '中班', '中班', '白班', '白班']\nconst HongArr = ['上班', '休息']\n\nfunction getListData(value: any) {\n  const DavidDays = moment('2019-5-4').diff(value.format('YYYY-MM-DD'), 'days')\n  const HongDays = moment('2019-5-4').diff(value.format('YYYY-MM-DD'), 'days')\n  let listData: ({ type: 'warning' | 'success' | 'error', content: string })[] = []\n\n  if (DavidDays <= 0) {\n    const DavidIndex = Math.abs(DavidDays) % 8\n    listData.push({\n      type: 'success',\n      content: '郭  ' + DavidArr[DavidIndex]\n    })\n  }\n\n  if (HongDays <= 0) {\n    const HongIndex = Math.abs(HongDays) % 2\n    listData.push({\n      type: 'warning',\n      content: '岳  ' + HongArr[HongIndex]\n    })\n  }\n  return listData || [];\n}\n\nfunction dateCellRender(value: any) {\n  const listData = getListData(value);\n  return (\n    <ul className=\"events\">\n      {\n        listData.map(item => (\n          <li key={item.content}>\n            <Badge status={item.type} text={item.content} />\n          </li>\n        ))\n      }\n    </ul>\n  );\n}\n\nfunction getMonthData(value: any) {\n  if (value.month() === 8) {\n    return 1394;\n  }\n}\n\nfunction monthCellRender(value: any) {\n  const num = getMonthData(value);\n  return num ? (\n    <div className=\"notes-month\">\n      <section>{num}</section>\n      <span>Backlog number</span>\n    </div>\n  ) : null;\n}\n\nconst CalendarStyled = styled(Calendar)`\n.events {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.events .ant-badge-status {\n  overflow: hidden;\n  white-space: nowrap;\n  width: 100%;\n  text-overflow: ellipsis;\n  font-size: 12px;\n}\n.notes-month {\n  text-align: center;\n  font-size: 28px;\n}\n.notes-month section {\n  font-size: 28px;\n}\n`\n\nclass workingSchedule extends Component {\n  state = {\n    value: moment(),\n    selectedValue: moment(),\n  }\n\n  onSelect = (value: any) => {\n    this.setState({\n      value,\n      selectedValue: value,\n    });\n  }\n\n  onPanelChange = (value: any) => {\n    this.setState({ value });\n  }\n\n  get David() {\n    const { selectedValue } = this.state\n    const obj = selectedValue && getListData(selectedValue).find(item => item.type === 'success')\n    return obj && obj.content\n  }\n\n  get Hong() {\n    const { selectedValue } = this.state\n    const obj = selectedValue && getListData(selectedValue).find(item => item.type === 'warning')\n    return obj && obj.content\n  }\n\n  render() {\n    const { value, selectedValue } = this.state\n\n    return (\n      <div className=\"workingSchedule\">\n        <h1 style={{ marginTop: '.5em' }}>{selectedValue && selectedValue.format('YYYY-MM-DD')}</h1>\n        <Alert type='success' message={`${this.David}`} />\n        <Alert type='warning' message={`${this.Hong}`} />\n\n        <CalendarStyled\n          value={value}\n          onSelect={this.onSelect}\n          onPanelChange={this.onPanelChange}\n          locale={locale}\n          dateCellRender={dateCellRender}\n          monthCellRender={monthCellRender}\n        />\n      </div>\n    );\n\n  }\n}\n\nexport default workingSchedule;\n","import { CssBaseline } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainView from './app/components/MainView';\nimport WorkingSchedule from './app/pages/WorkingSchedule/WorkingSchedule';\nimport './config.js';\nexport default class App extends Component {\n  render () {\n    return (\n      <Router>\n        <div>\n          <CssBaseline />\n\n          <Switch>\n            <Route exact path=\"/working-schedule\" component={WorkingSchedule} />\n            <Route path=\"/\" component={MainView} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { install } from '@material-ui/styles'\n\ninstall()\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport purple from '@material-ui/core/colors/purple'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'app/utils/bootstrap'\n\nconsole.log('这里', process.env)\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#5A2666' }, // Purple and green play nicely together.\n    secondary: { main: '#11cb5f' }, // This is just green.A700 as hex.\n  },\n  typography: { useNextVariants: true },\n})\nconsole.log(theme)\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}