{"version":3,"sources":["app/pages/summary/data.tsx","app/pages/summary/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["releases","tag","version","Dot","x","y","color","alpha","stageCtx","circleRadius","Object","classCallCheck","this","draw","beginPath","arc","Math","PI","fillStyle","fill","Summary","tagCtx","versionCtx","tagWidth","window","innerWidth","tagHeight","innerHeight","versionWidth","versionHeight","numberOffsetX","numberOffsetY","stage","stageWidth","stageHeight","renderFrom","renderTimer","renderRunning","breakTimer","totalDotsCount","dots","colors","mostTagCount","tweenDots","dot","pos","type","index","TweenMax","to","round","random","_this","randomNumber","ease","Sine","easeOut","onComplete","splice","newDot","length","push","delay","Power2","easeInOut","init","initReleases","document","getElementById","getContext","width","height","forEach","release","tagElement","querySelector","concat","versionElement","tagElement1","initRelease","min","max","floor","canvasRender","tagCanvas","versionCanvas","drawTag","toString","drawVersion","console","log","loop","clearRect","i","requestAnimationFrame","num","textAlign","font","fillText","ctx","canvas","imageData","getImageData","data","formNumber","getRenderTimer","setTimeout","breakRelease","react_default","a","createElement","id","Component","App","summary_Summary","Boolean","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gPAAaA,EAAW,CAClB,CACEC,IAAK,4DACLC,QAAS,SAEX,CACED,IAAK,6CACLC,QAAS,SAEX,CACED,IAAK,qEACLC,QAAS,SAEX,CACED,IAAK,2BACLC,QAAS,SAEX,CACED,IAAK,iFACLC,QAAS,SAEX,CACED,IAAK,iFACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,6IACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,gDACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,qBACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,QACLC,QAAS,SAEX,CACED,IAAK,SACLC,QAAS,UAEX,CACED,IAAK,SACLC,QAAS,UAEX,CACED,IAAK,SACLC,QAAS,UAEX,CACED,IAAK,SACLC,QAAS,UAEX,CACED,IAAK,SACLC,QAAS,aCpJXC,EASJ,SAAAA,EAAYC,EAAGC,EAAGC,EAAOC,EAAOC,EAAUC,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAT,GAAAS,KARzDR,OAQwD,EAAAQ,KAPxDP,OAOw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C,EAAAC,cAAA,UAAQC,GAAG,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,wBAhdkBC,aC7BhBC,mLAEjB,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAD,cAJyBF,aCSbG,QACW,cAA7B3F,OAAO4F,SAASC,UAEe,UAA7B7F,OAAO4F,SAASC,UAEhB7F,OAAO4F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAAStD,SAASC,eAAe,SDmI3C,kBAAmBsD,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.05f631c0.chunk.js","sourcesContent":["export const releases = [\n      {\n        tag: '2018-4-26今天我们上线啦！',\n        version: '1.0.0',\n      },\n      {\n        tag: '修复一个小问题',\n        version: '1.0.1',\n      },\n      {\n        tag: '1.1.0 你没有用过的船新版本',\n        version: '1.1.0',\n      },\n      {\n        tag: '修复问题',\n        version: '1.1.1',\n      },\n      {\n        tag: '增加临时的图片旋转解决方案',\n        version: '1.1.2',\n      },\n      {\n        tag: '优化图片预览是显示图片速度',\n        version: '1.1.3',\n      },\n      {\n        tag: '1.2.0',\n        version: '1.2.0',\n      },\n      {\n        tag: '1.2.1',\n        version: '1.2.1',\n      },\n      {\n        tag: '1.2.2',\n        version: '1.2.2',\n      },\n      {\n        tag: '1.2.3',\n        version: '1.2.3',\n      },\n      {\n        tag: '1.2.4',\n        version: '1.2.4',\n      },\n      {\n        tag: '1.3.0',\n        version: '1.3.0',\n      },\n      {\n        tag: '1.3.1',\n        version: '1.3.1',\n      },\n      {\n        tag: '修复第一次编辑简要病史保存后不收起不回显的问题',\n        version: '1.3.2',\n      },\n      {\n        tag: '1.3.3',\n        version: '1.3.3',\n      },\n      {\n        tag: '抓紧！2.0发车了！',\n        version: '2.0.0',\n      },\n      {\n        tag: '2.1.0',\n        version: '2.1.0',\n      },\n      {\n        tag: '2.2.0',\n        version: '2.2.0',\n      },\n      {\n        tag: '2.2.1',\n        version: '2.2.1',\n      },\n      {\n        tag: '2.2.2',\n        version: '2.2.2',\n      },\n      {\n        tag: '2.2.3',\n        version: '2.2.3',\n      },\n      {\n        tag: '2.2.4',\n        version: '2.2.4',\n      },\n      {\n        tag: '2.3.0',\n        version: '2.3.0',\n      },\n      {\n        tag: '湘雅-2.4.0',\n        version: '2.4.0',\n      },\n      {\n        tag: '2.4.1',\n        version: '2.4.1',\n      },\n      {\n        tag: '2.5.0',\n        version: '2.5.0',\n      },\n      {\n        tag: '2.6.0',\n        version: '2.6.0',\n      },\n      {\n        tag: '2.7.0',\n        version: '2.7.0',\n      },\n      {\n        tag: '2.8.0',\n        version: '2.8.0',\n      },\n      {\n        tag: '2.8.1',\n        version: '2.8.1',\n      },\n      {\n        tag: '2.9.0',\n        version: '2.9.0',\n      },\n      {\n        tag: '2.9.1',\n        version: '2.9.1',\n      },\n      {\n        tag: '2.9.2',\n        version: '2.9.2',\n      },\n      {\n        tag: '2.9.3',\n        version: '2.9.3',\n      },\n      {\n        tag: '2.10.0',\n        version: '2.10.0',\n      },\n      {\n        tag: '2.11.0',\n        version: '2.11.0',\n      },\n      {\n        tag: '2.11.1',\n        version: '2.11.1',\n      },\n      {\n        tag: '2.11.2',\n        version: '2.11.2',\n      },\n      {\n        tag: 'Feture',\n        version: 'xx.xx.xx',\n      },\n    ]","import React, { Component } from 'react'\nimport { TweenMax, Power2, Sine } from 'gsap/TweenMax'\nimport { releases } from './data'\n\n/*\nDesc: Dot object\n*/\nclass Dot {\n  x\n  y\n  color\n  alpha\n  draw\n  stageCtx\n  circleRadius\n\n  constructor(x, y, color, alpha, stageCtx, circleRadius) {\n    this.x = x\n    this.y = y\n    this.color = color\n    this.alpha = alpha\n    this.stageCtx = stageCtx\n    this.circleRadius = circleRadius\n\n    this.draw = function () {\n      this.stageCtx.beginPath()\n      this.stageCtx.arc(this.x, this.y, this.circleRadius, 0, 2 * Math.PI, false)\n      this.stageCtx.fillStyle = 'rgba(' + this.color + ', ' + this.alpha + ')'\n      this.stageCtx.fill()\n    }\n  }\n}\nexport default class Summary extends Component {\n  color: string = ''\n  alpha: number = 0\n  x: number = 0\n  y: number = 0\n  tagCtx\n  versionCtx\n  tagWidth = window.innerWidth\n  tagHeight = window.innerHeight\n  versionWidth = window.innerWidth\n  versionHeight = window.innerHeight\n  numberOffsetX\n  numberOffsetY\n  stage\n  stageCtx\n  stageWidth = window.innerWidth\n  stageHeight = window.innerHeight\n  renderFrom = 0\n  renderTimer = 1000\n  // renderTimer = 100\n  renderRunning = true\n  breakTimer = 1000\n  // breakTimer = 100\n  totalDotsCount = 800\n  dots: (any)[] = []\n  circleRadius = 2\n  colors = [\n    '61, 207, 236',\n    '255, 244, 174',\n    '255, 211, 218',\n    '151, 211, 226',\n  ]\n  mostTagCount = 3\n\n  componentDidMount() {\n    /*\n  Desc: Define inital variables\n  */\n    this.init()\n    /*\n  Desc: Create a certain amount of dots\n  */\n    for (let i = 0; i < this.totalDotsCount; i++) {\n      // Create a dot\n      let dot = new Dot(\n        this.randomNumber(0, this.stageWidth),\n        this.randomNumber(0, this.stageHeight),\n        this.colors[this.randomNumber(1, this.colors.length)],\n        0.3,\n        this.stageCtx,\n        this.circleRadius\n      )\n\n      // Push to into an array of dots\n      this.dots.push(dot)\n\n      // Animate dots\n      this.tweenDots(dot, '', 'space', null)\n    }\n\n    this.canvasRender()\n\n    this.loop()\n  }\n\n  /*\nDesc: Animate dots\n*/\n  tweenDots = (dot, pos, type, index) => {\n    // Move dots around canvas randomly\n    if (type === 'space') {\n      // Tween dot to coordinate to form number\n      TweenMax.to(dot, 3 + Math.round(Math.random() * 100) / 100, {\n        x: this.randomNumber(0, this.stageWidth),\n        y: this.randomNumber(0, this.stageHeight),\n        alpha: 0.3,\n        ease: Sine.easeOut,\n        onComplete: () => {\n          this.tweenDots(dot, '', 'space', null)\n        },\n      })\n    } else if (type === 'empty') {\n      TweenMax.to(dot, 1, {\n        x: this.randomNumber(0, this.stageWidth),\n        y: this.randomNumber(0, this.stageHeight),\n        alpha: 0,\n        ease: Sine.easeOut,\n        onComplete: () => {\n          this.dots.splice(index, 1)\n        },\n      })\n    } else {\n      // Tween dot to coordinate to form number\n      // const newDot = { ...dot }\n      // dots.push()\n      const newDot = new Dot(\n        this.randomNumber(0, this.stageWidth),\n        this.randomNumber(0, this.stageHeight),\n        this.colors[this.randomNumber(1, this.colors.length)],\n        0.3,\n        this.stageCtx,\n        this.circleRadius\n      )\n\n      // Push to into an array of dots\n      this.dots.push(newDot)\n      TweenMax.to(newDot, 1 + Math.round(Math.random() * 100) / 100, {\n        x: pos.x + this.numberOffsetX,\n        y: pos.y + this.numberOffsetY,\n        delay: 0,\n        alpha: 1,\n        ease: Power2.easeInOut,\n        onComplete: function () { },\n      })\n    }\n  }\n\n  /*\n  Desc: Init canvases & Number text\n  */\n  init = () => {\n    this.initReleases()\n\n    // Init Stage which will have dots\n    this.stage = document.getElementById('canvas-dots')\n    this.stageCtx = this.stage.getContext('2d')\n    this.stage.width = this.stageWidth\n    this.stage.height = this.stageHeight\n\n    // Create offset so text appears in middle of screen\n    this.numberOffsetX = (this.stageWidth - this.tagWidth) / 2\n    this.numberOffsetY = (this.stageHeight - this.tagHeight) / 2\n  }\n  initReleases = () => {\n    const initRelease = (index) => {\n      // Init stage which will have tags\n      // Set the canvas to width and height of the window\n      const tagElement: HTMLCanvasElement | null = document.querySelector(`#canvas-tag-${index}`)\n      const versionElement: HTMLCanvasElement | null = document.querySelector(`#canvas-version-${index}`)\n      if (tagElement && versionElement) {\n        let tagElement1: HTMLCanvasElement = tagElement\n        tagElement1.width = this.tagWidth // May be I can use tag char count to set every release of width here\n        tagElement1.height = this.tagHeight\n        versionElement.width = this.versionWidth // May be I can use tag char count to set every release of width here\n        versionElement.height = this.versionHeight\n      }\n    }\n    releases.forEach((release, index) => {\n      initRelease(index)\n    })\n  }\n\n  /*\n  Desc: Get a random number\n  */\n  randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min)\n  }\n\n  /*\n  Desc: render\n  */\n  canvasRender = () => {\n    // Send number to be drawn\n    const tagCanvas: HTMLCanvasElement | null = document.querySelector(`#canvas-tag-${this.renderFrom}`)\n    const versionCanvas: HTMLCanvasElement | null = document.querySelector(`#canvas-version-${this.renderFrom}`)\n\n    if (tagCanvas && versionCanvas) {\n      this.tagCtx = tagCanvas.getContext('2d')\n      this.versionCtx = versionCanvas.getContext('2d')\n    }\n\n    this.drawTag(releases[this.renderFrom].tag.toString())\n    this.drawVersion(releases[this.renderFrom].version.toString())\n    console.log('dots', this.dots.length, releases[this.renderFrom]['tagDots'].length, releases[this.renderFrom]['versionDots'])\n\n    // When we hit zero stop render\n    if (this.renderFrom + 1 === releases.length) {\n      this.renderRunning = false\n      // Now that renders finised show the text Go\n    }\n\n    // Decrement number down\n    console.log('renderForm', this.renderFrom)\n    this.renderFrom++\n  }\n\n  /*\n  Desc: Redraw loops\n  */\n  loop = () => {\n    this.stageCtx.clearRect(0, 0, this.stageWidth, this.stageHeight)\n\n    for (let i = 0; i < this.dots.length; i++) {\n      this.dots[i].draw(this.stageCtx)\n    }\n\n    requestAnimationFrame(this.loop)\n  }\n\n  /*\n  Desc: Draw number\n  */\n  drawTag = (num) => {\n    // Create a number on a seperate canvas\n    // Use a seperate canvas thats smaller so we have less data to loop over when using getImagedata()\n\n    //\tClear stage of previous tags\n    console.log(num)\n    this.tagCtx.clearRect(0, 0, this.tagWidth, this.tagHeight)\n\n    this.tagCtx.fillStyle = '#24282f'\n    this.tagCtx.textAlign = 'left'\n    this.tagCtx.font = 'bold 88px Lato'\n    console.log(((this.tagHeight - 200) / this.mostTagCount) * ((this.renderFrom % 3) + 1))\n    this.tagCtx.fillText(\n      num,\n      100,\n      ((this.tagHeight - 200) / this.mostTagCount) * ((this.renderFrom % 3) + 1)\n    )\n    console.log(this.renderFrom)\n    const canvas: HTMLCanvasElement | null = document.querySelector(`#canvas-tag-${this.renderFrom}`)\n    console.log(canvas)\n    let ctx\n    if (canvas) {\n      ctx = canvas.getContext('2d')\n    }\n\n    // getImageData(x, y, width, height)\n    // note: is an exspenisve const, so =  make sure canvas is small as possible for what you gra=> b\n    // Returns 1 Dimensional array of pixel color value chanels\n    // Red, blue, green, alpha chanel of single pixel\n    // First chanel is red\n    const imageData = ctx.getImageData(0, 0, this.tagWidth, this.tagHeight).data\n    // Clear number coordinated\n    releases[this.renderFrom]['tagDots'] = []\n    console.log(releases[0])\n    // i is equal to total image data(eg: 480,000)\n    // run while i is greater or equal to 0\n    // every time we run it minus 4 from i. Do this because each pixel has 4 chanels & we are only interested in individual pixels\n    for (let i = imageData.length; i >= 0; i -= 4) {\n\n      // If not an empty pixel\n      if (imageData[i] !== 0) {\n        // i represents the position in the array a red pixel was found\n\n        // (i / 4 ) and percentage by width of canvas\n        // Need to divide i by 4 because it has 4 values and you need its orginal position\n        // Then you need to percentage it by the width(600) because each row contains 600 pixels and you need its relative position in that row\n        const x = (i / 4) % this.tagWidth\n\n        // (i divide by width) then divide by 4\n        // Divide by width(600) first so you get the rows of pixels that make up the canvas. Then divide by 4 to get its postion within the row\n        const y = Math.floor(Math.floor(i / this.tagWidth) / 4)\n\n        // If position exists and number is divisble by circle plus a pixel gap then add cordinates to array. So circles do not overlap\n        if (\n          x &&\n          x % (this.circleRadius * 2 + 3) === 0 &&\n          (y && y % (this.circleRadius * 2 + 3) === 0)\n        ) {\n          // Push object to numberPixels array with x and y coordinates\n          releases[this.renderFrom]['tagDots'].push({ x: x, y: y })\n        }\n      }\n    }\n\n    this.formNumber('tagDots')\n  }\n\n  drawVersion = (num) => {\n    // Create a number on a seperate canvas\n    // Use a seperate canvas thats smaller so we have less data to loop over when using getImagedata()\n\n    //\tClear stage of previous versions\n    this.versionCtx.clearRect(0, 0, this.versionWidth, this.versionHeight)\n\n    this.versionCtx.fillStyle = '#24282f'\n    this.versionCtx.textAlign = 'left'\n    this.versionCtx.font = 'bold 68px Lato'\n    this.versionCtx.fillText(\n      num,\n      100,\n      ((this.versionHeight - 200) / this.mostTagCount) * ((this.renderFrom % 3) + 1) + 80\n    )\n\n    const canvas: HTMLCanvasElement | null = document.querySelector(`#canvas-version-${this.renderFrom}`)\n    let ctx\n    if (canvas) {\n      ctx = canvas.getContext('2d')\n    }\n\n    // getImageData(x, y, width, height)\n    // note: is an exspenisve const, so =  make sure canvas is small as possible for what you gra=> b\n    // Returns 1 Dimensional array of pixel color value chanels\n    // Red, blue, green, alpha chanel of single pixel\n    // First chanel is red\n    const imageData = ctx.getImageData(0, 0, this.versionWidth, this.versionHeight).data\n\n    // Clear number coordinated\n    releases[this.renderFrom]['versionDots'] = []\n\n    // i is equal to total image data(eg: 480,000)\n    // run while i is greater or equal to 0\n    // every time we run it minus 4 from i. Do this because each pixel has 4 chanels & we are only interested in individual pixels\n    for (let i = imageData.length; i >= 0; i -= 4) {\n      // If not an empty pixel\n      if (imageData[i] !== 0) {\n        // i represents the position in the array a red pixel was found\n\n        // (i / 4 ) and percentage by width of canvas\n        // Need to divide i by 4 because it has 4 values and you need its orginal position\n        // Then you need to percentage it by the width(600) because each row contains 600 pixels and you need its relative position in that row\n        const x = (i / 4) % this.tagWidth\n\n        // (i divide by width) then divide by 4\n        // Divide by width(600) first so you get the rows of pixels that make up the canvas. Then divide by 4 to get its postion within the row\n        const y = Math.floor(Math.floor(i / this.tagWidth) / 4)\n\n        // If position exists and number is divisble by circle plus a pixel gap then add cordinates to array. So circles do not overlap\n        if (\n          x &&\n          x % (this.circleRadius * 2 + 3) === 0 &&\n          (y && y % (this.circleRadius * 2 + 3) === 0)\n        ) {\n          // Push object to numberPixels array with x and y coordinates\n          releases[this.renderFrom]['versionDots'].push({ x: x, y: y })\n        }\n      }\n    }\n\n    this.formNumber('versionDots')\n  }\n\n  getRenderTimer = () => {\n    // const tag = releases[renderFrom].tag\n    // const version = releases[renderFrom].version\n\n    // return tag === version ? 2500 : renderTimer\n    return this.renderTimer // 出现几个就break一次值需要renderTimer即可\n  }\n  /*\n  Desc: Form number\n  */\n  formNumber = (type) => {\n    for (\n      let i = 0;\n      i < releases[this.renderFrom][type].length;\n      i++\n    ) {\n      // Loop out as many coordionates as we need & pass dots in to animate\n      this.tweenDots(this.dots[i], releases[this.renderFrom][type][i], '', null)\n    }\n\n    // Break number apart\n    if (this.renderRunning && this.renderFrom + 1 !== releases.length) {\n      setTimeout(() => {\n        console.log('render', type)\n        if (this.renderFrom % 3 === 0) {\n          setTimeout(() => {\n            this.breakRelease(type)\n          }, this.renderTimer + 500)\n        } else if (type === 'versionDots') {\n          this.canvasRender()\n        }\n      }, this.getRenderTimer())\n    }\n  }\n\n  breakRelease = (type) => {\n    for (let i = this.dots.length - 1; i >= this.totalDotsCount; i--) {\n      this.tweenDots(this.dots[i], '', 'empty', i)\n    }\n\n    if (this.renderRunning && type === 'versionDots') {\n      // Build next number\n      setTimeout(() => {\n        this.canvasRender()\n      }, this.breakTimer)\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"canvas-wrap\">\n        <canvas id=\"canvas-tag-0\" />\n        <canvas id=\"canvas-tag-1\" />\n        <canvas id=\"canvas-tag-2\" />\n        <canvas id=\"canvas-tag-3\" />\n        <canvas id=\"canvas-tag-4\" />\n        <canvas id=\"canvas-tag-5\" />\n        <canvas id=\"canvas-tag-6\" />\n        <canvas id=\"canvas-tag-7\" />\n        <canvas id=\"canvas-tag-8\" />\n        <canvas id=\"canvas-tag-9\" />\n        <canvas id=\"canvas-tag-10\" />\n        <canvas id=\"canvas-tag-11\" />\n        <canvas id=\"canvas-tag-12\" />\n        <canvas id=\"canvas-tag-13\" />\n        <canvas id=\"canvas-tag-14\" />\n        <canvas id=\"canvas-tag-15\" />\n        <canvas id=\"canvas-tag-16\" />\n        <canvas id=\"canvas-tag-17\" />\n        <canvas id=\"canvas-tag-18\" />\n        <canvas id=\"canvas-tag-19\" />\n        <canvas id=\"canvas-tag-20\" />\n        <canvas id=\"canvas-tag-21\" />\n        <canvas id=\"canvas-tag-22\" />\n        <canvas id=\"canvas-tag-23\" />\n        <canvas id=\"canvas-tag-24\" />\n        <canvas id=\"canvas-tag-25\" />\n        <canvas id=\"canvas-tag-26\" />\n        <canvas id=\"canvas-tag-27\" />\n        <canvas id=\"canvas-tag-28\" />\n        <canvas id=\"canvas-tag-29\" />\n        <canvas id=\"canvas-tag-30\" />\n        <canvas id=\"canvas-tag-31\" />\n        <canvas id=\"canvas-tag-32\" />\n        <canvas id=\"canvas-tag-33\" />\n        <canvas id=\"canvas-tag-34\" />\n        <canvas id=\"canvas-tag-35\" />\n        <canvas id=\"canvas-tag-36\" />\n        <canvas id=\"canvas-tag-37\" />\n        <canvas id=\"canvas-tag-38\" />\n        <canvas id=\"canvas-version-0\" />\n        <canvas id=\"canvas-version-1\" />\n        <canvas id=\"canvas-version-2\" />\n        <canvas id=\"canvas-version-3\" />\n        <canvas id=\"canvas-version-4\" />\n        <canvas id=\"canvas-version-5\" />\n        <canvas id=\"canvas-version-6\" />\n        <canvas id=\"canvas-version-7\" />\n        <canvas id=\"canvas-version-8\" />\n        <canvas id=\"canvas-version-9\" />\n        <canvas id=\"canvas-version-10\" />\n        <canvas id=\"canvas-version-11\" />\n        <canvas id=\"canvas-version-12\" />\n        <canvas id=\"canvas-version-13\" />\n        <canvas id=\"canvas-version-14\" />\n        <canvas id=\"canvas-version-15\" />\n        <canvas id=\"canvas-version-16\" />\n        <canvas id=\"canvas-version-17\" />\n        <canvas id=\"canvas-version-18\" />\n        <canvas id=\"canvas-version-19\" />\n        <canvas id=\"canvas-version-20\" />\n        <canvas id=\"canvas-version-21\" />\n        <canvas id=\"canvas-version-22\" />\n        <canvas id=\"canvas-version-23\" />\n        <canvas id=\"canvas-version-24\" />\n        <canvas id=\"canvas-version-25\" />\n        <canvas id=\"canvas-version-26\" />\n        <canvas id=\"canvas-version-27\" />\n        <canvas id=\"canvas-version-28\" />\n        <canvas id=\"canvas-version-29\" />\n        <canvas id=\"canvas-version-30\" />\n        <canvas id=\"canvas-version-31\" />\n        <canvas id=\"canvas-version-32\" />\n        <canvas id=\"canvas-version-33\" />\n        <canvas id=\"canvas-version-34\" />\n        <canvas id=\"canvas-version-35\" />\n        <canvas id=\"canvas-version-36\" />\n        <canvas id=\"canvas-version-37\" />\n        <canvas id=\"canvas-version-38\" />\n        <canvas id=\"canvas-version\" />\n        <canvas id=\"canvas-dots\" />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Summary from './app/pages/summary'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Summary />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}